#coding=utf-8
import numpy as np
x=np.array([[1,2,3],[4,5,6],[7,8,9],[10,11,12]])
print(x)
print('1-----------------')
v1=np.array([1, 0, 1])
y2=np.zeros((4,3),dtype=np.int64)
#print(y2)
#y=np.empty_like(x)
for i in range(4):
    y2[i,:]=x[i,:]+v1    #当x很大时，用这种方法很慢，实际上是第2种方法
print(y2)
print('2-----------------')
v2=np.tile(v1,(4,1))    #将v1纵向复制4个，横向复制1个
print(x+v2)
print('3-----------------')
print(x+v1) #利用广播实现
print('4-----------------')
v4=np.array([1,0,1])
print(x+v4) #利用广播实现

#广播两个阵列遵循以下规则：没看懂
'''
1.如果数组不具有相同的等级，则用1来预先给出较低等级数组的形状，直到两个形状具有相同的长度。
2.如果这两个数组在维度中具有相同的大小，或者如果其中一个数组在该维度中具有大小1，则这两个数组被称为在维度中兼容 。
3.如果阵列在所有维度上兼容，阵列可以一起广播。
4.广播后，每个阵列的行为就好像它的形状等于两个输入阵列的形状的元素最大值。
5.在任何维度中，一个数组的大小为1，另一个数组的大小大于1，则第一个数组的行为就好像沿着该维度复制一样
'''
